@font-face {
    font-family: "icons";
    src: url('../fonts/icons/icons.eot');
    src: url('../fonts/icons/icons.eot?#iefix') format('eot'),
    url('../fonts/icons/icons.woff2') format('woff2'),
    url('../fonts/icons/icons.woff') format('woff'),
    url('../fonts/icons/icons.ttf') format('truetype'),
    url('../fonts/icons/icons.svg#icons') format('svg');
  }
  
  @mixin icon-styles {
    font-family: "icons";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-style: normal;
    font-variant: normal;
    font-weight: normal;
  // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
    text-decoration: none;
    text-transform: none;
  }
  
  %icon {
    @include icon-styles;
  }
  
  @function icon-char($filename) {
  $char: "";
  
    @if $filename == browserify {
      $char: "\E001";
    }
  
  @return $char;
  }
  
  @mixin icon-before ($filename, $insert: before, $extend: true) {
    &:#{$insert} {
      @if $extend {
        @extend %icon;
      } @else {
        @include icon-styles;
      }
      content: icon-char($filename);
    }
  }
  
  .icon-before-browserify {
  
      @include icon-before(browserify);
  
    }
  
  
  
  @mixin icon-after ($filename, $insert: after, $extend: true) {
  &:#{$insert} {
    @if $extend {
      @extend %icon;
    } @else {
      @include icon-styles;
    }
    content: icon-char($filename);
  }
  }
  
  .icon-after-browserify {
  
    @include icon-after(browserify);
  
  }
  